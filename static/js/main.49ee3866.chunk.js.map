{"version":3,"sources":["helpers/index.js","services/apiTrivia.js","actions/gameActions.js","pages/Login.jsx","actions/userActions.js","actions/settingsActions.js","components/Header.jsx","actions/questionTimerActions.js","components/Timer.jsx","components/Question.jsx","pages/Jogo.jsx","components/Select.jsx","pages/Settings.jsx","pages/Feedback.jsx","pages/Ranking.jsx","serviceWorker.js","reducers/user.js","reducers/game.js","reducers/settings.js","reducers/questionTimer.js","reducers/index.js","store/index.js","index.js","App.js"],"names":["getArrayPlayers","JSON","parse","localStorage","getItem","getStatePlayer","attPlayerfromLS","response","timerValue","objFromLS","result","isCorrect","Number","difficulty","player","score","assertions","setItem","stringify","name","ArrayPlayers","objPlayer","length","newArray","map","item","attRankingArrayFromLS","setInitialPlayerOfLS","gravatarEmail","email","arrayPlayers","OBJ","picture","MD5","toString","push","generateRandomAnswers","questions","index","answers","incorrect_answers","splice","Math","floor","random","correct_answer","border","isDisabled","getQuestions","a","async","howMuch","category","type","token","fetch","endpoint","json","resolve","getCategories","getToken","handleUserAnswer","payload","Login","props","state","handleInput","bind","handleClick","btnJogar","setCategoriesAPI","this","target","value","setState","history","setUser","setTokenAPI","chosedSettings","className","src","alt","placeholder","onChange","data-testid","disabled","onClick","Component","connect","settings","dispatch","setUserAction","param","categories","Header","imgGravatar","getEmail","getName","user","game","updateTimer","Timer","interval","timer","verifyTimer","setStateInterval","setInterval","prev","timerIsOn","questionTimer","clearInterval","updateTimerAction","handleUserAnswerAction","Question","answerButtons","question","handleResponse","answer","i","key","style","nextQuestionBtn","handleNextQuestion","backgroundColor","id","Jogo","setAnswers","nextQuestion","infoIsLoaded","setAnswersAction","Select","handleChange","htmlFor","Settings","saveSettings","setNewSettings","setNewSettingsAction","Feedback","feedback","Ranking","sort","b","slice","position","Boolean","window","location","hostname","match","INITIAL_STATE","action","results","trivia_categories","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Cypress","ReactDOM","render","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.49ee3866.chunk.js","sourcesContent":["import { MD5 } from 'crypto-js';\n\nconst generateRandomAnswers = (questions, index) => {\n  const answers = questions[index].incorrect_answers;\n  answers.splice(Math.floor(Math.random() * ((questions.length - 1))),\n    0, questions[index].correct_answer);\n  const HARD = 3;\n  const arrayAnswers = answers.map((item) => ({\n    item,\n    border: '',\n    isDisabled: false,\n    isCorrect: item === questions[index].correct_answer,\n    difficulty: (questions[index].difficulty === 'easy' && 1)\n      || (questions[index].difficulty === 'medium' && 2)\n      || (questions[index].difficulty === 'hard' && HARD),\n  }));\n  return arrayAnswers;\n};\n\nexport const getArrayPlayers = () => JSON.parse(localStorage.getItem('ranking'));\nexport const getStatePlayer = () => JSON.parse(localStorage.getItem('state'));\n\nconst attRankingArrayFromLS = ({ player: { score, name } }) => {\n  const ArrayPlayers = getArrayPlayers();\n  const objPlayer = ArrayPlayers[ArrayPlayers.length - 1];\n  objPlayer.score = score;\n  const newArray = ArrayPlayers.map((item) => (\n    name === item.name ? objPlayer : item));\n  localStorage.setItem('ranking', JSON.stringify(newArray));\n};\n\nexport const attPlayerfromLS = (response, timerValue) => {\n  const objFromLS = getStatePlayer();\n  const RIGHT_ANSWER = 10;\n  const result = response.isCorrect\n    ? (RIGHT_ANSWER + (Number(timerValue) * response.difficulty)) : 0;\n  objFromLS.player.score += result;\n  objFromLS.player.assertions += result !== 0 ? 1 : 0;\n  localStorage.setItem('state', JSON.stringify(objFromLS));\n  attRankingArrayFromLS(objFromLS);\n};\n\nexport const setInitialPlayerOfLS = ({ name, email }) => {\n  const objPlayer = { player: {\n    name,\n    assertions: 0,\n    score: 0,\n    gravatarEmail: email,\n  } };\n  localStorage.setItem('state', JSON.stringify(objPlayer));\n  const arrayPlayers = getArrayPlayers();\n  const OBJ = {\n    name: objPlayer.player.name,\n    picture: `https://www.gravatar.com/avatar/${MD5(objPlayer.gravatarEmail).toString()}`,\n    score: objPlayer.player.score,\n  };\n  if (arrayPlayers) {\n    const newArray = [...arrayPlayers, OBJ];\n    return localStorage.setItem('ranking', JSON.stringify(newArray));\n  }\n  const newArray = [];\n  newArray.push(OBJ);\n  return localStorage.setItem('ranking', JSON.stringify(newArray));\n};\n\nexport default generateRandomAnswers;\n","const getToken = async () => {\n  const endpoint = await fetch('https://opentdb.com/api_token.php?command=request');\n  const resolve = await endpoint.json();\n  return resolve;\n};\n\nexport const getQuestions = async ({ howMuch, category, difficulty, type }) => {\n  const token = localStorage.getItem('token');\n  const endpoint = await fetch(`https://opentdb.com/api.php?amount=${howMuch}&category=${category}&difficulty=${difficulty}&type=${type}&token=${token}`);\n  const resolve = await endpoint.json();\n  return resolve;\n};\n\nexport const getCategories = async () => {\n  const endpoint = await fetch('https://opentdb.com/api_category.php');\n  const resolve = await endpoint.json();\n  return resolve;\n};\n\nexport default getToken;\n","import getToken, { getQuestions } from '../services/apiTrivia';\n\nexport const HANDLE_ANSWER = 'HANDLE_ANSWER';\nexport const SET_ANSWERS = 'SET_ANSWERS';\nexport const SET_QUESTIONS = 'SET_QUESTIONS';\nexport const NEXT_QUESTION = 'NEXT_QUESTION';\n\nexport const setAnswers = (payload) => ({ type: SET_ANSWERS, payload });\nexport const setQuestions = (payload) => ({ type: SET_QUESTIONS, payload });\nexport const handleUserAnswer = (payload) => ({ type: HANDLE_ANSWER, payload });\nexport const nextQuestion = (payload) => ({ type: NEXT_QUESTION, payload });\n\nexport const setTokenAPI = (param) => async (dispatch) => {\n  const token = await getToken();\n  localStorage.setItem('token', token.token);\n  const questions = await getQuestions(param);\n  dispatch(setQuestions(questions));\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport '../styles/login.css';\nimport { setInitialPlayerOfLS } from '../helpers/index';\nimport { setCategoriesAPI as setCategoriesAPIAction,\n  setUser as setUserAction } from '../actions/userActions';\nimport { setTokenAPI as setTokenAPIAction } from '../actions/gameActions';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.btnJogar = this.btnJogar.bind(this);\n  }\n\n  componentDidMount() {\n    const { setCategoriesAPI } = this.props;\n    setCategoriesAPI();\n  }\n\n  handleInput({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  async handleClick() {\n    const { history, setUser, setTokenAPI, chosedSettings } = this.props;\n    const { name, email } = this.state;\n    setUser({ name, email });\n    await setTokenAPI(chosedSettings);\n    setInitialPlayerOfLS({ name, email });\n    history.push('/jogo');\n  }\n\n  btnJogar() {\n    const { name, email } = this.state;\n    const stateBtn = email.length >= 1 && name.length >= 1;\n    return stateBtn;\n  }\n\n  render() {\n    const { name, email } = this.state;\n    const { history } = this.props;\n    return (\n      <main className=\"containner-login-main\">\n        <img className=\"logo\" src=\"/trivia.png\" alt=\"d\" />\n        <form className=\"card-login\">\n          <h3>Nome Do Jogador:</h3>\n          <input\n            className=\"input-login input-name\"\n            placeholder=\"Name:\"\n            value={ name }\n            onChange={ this.handleInput }\n            type=\"text\"\n            name=\"name\"\n            data-testid=\"input-player-name\"\n          />\n          <h3 className=\"text-email-gravatar\">Email Do Gravatar:</h3>\n          <input\n            placeholder=\"Email:\"\n            className=\"input-login\"\n            value={ email }\n            onChange={ this.handleInput }\n            type=\"text\"\n            name=\"email\"\n            data-testid=\"input-gravatar-email\"\n          />\n          <button\n            className={ !this.btnJogar() ? 'btn-jogar-desab' : 'btn-jogar' }\n            type=\"button\"\n            data-testid=\"btn-play\"\n            disabled={ !this.btnJogar() }\n            onClick={ this.handleClick }\n          >\n            Jogar\n          </button>\n          <button\n            className=\"btn-config\"\n            data-testid=\"btn-settings\"\n            type=\"button\"\n            onClick={ () => history.push('/settings') }\n          >\n            configuração do jogo\n          </button>\n        </form>\n      </main>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  setUser: PropTypes.func.isRequired,\n  setTokenAPI: PropTypes.func.isRequired,\n  setCategoriesAPI: PropTypes.func.isRequired,\n  chosedSettings: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  setUser: (payload) => dispatch(setUserAction(payload)),\n  setTokenAPI: (payload) => dispatch(setTokenAPIAction(payload)),\n  setCategoriesAPI: () => dispatch(setCategoriesAPIAction()),\n});\n\nconst mapStateToProps = ({ settings: { chosedSettings } }) => ({\n  chosedSettings,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import { getCategories } from '../services/apiTrivia';\nimport { setCategories } from './settingsActions';\n\nexport const SET_USER = 'SET_USER';\n\nexport const setUser = (payload) => ({ type: SET_USER, payload });\n\nexport const setCategoriesAPI = () => async (dispatch) => {\n  const categories = await getCategories();\n  dispatch(setCategories(categories));\n};\n","export const SET_CATEGORIES = 'SET_CATEGORIES';\nexport const SET_NEW_SETTINGS = 'SET_NEW_SETTINGS';\n\nexport const setCategories = (payload) => ({ type: SET_CATEGORIES, payload });\nexport const setNewSettings = (payload) => ({ type: SET_NEW_SETTINGS, payload });\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MD5 } from 'crypto-js';\nimport PropTypes from 'prop-types';\nimport '../styles/header.css';\n\nclass Header extends Component {\n  constructor() {\n    super();\n    this.imgGravatar = this.imgGravatar.bind(this);\n  }\n\n  imgGravatar(email) {\n    const link = 'https://www.gravatar.com/avatar/';\n    const emailCrypto = MD5(email).toString();\n    return link + emailCrypto;\n  }\n\n  render() {\n    const { getEmail, getName } = this.props;\n    return (\n      <header className=\"header-containner\">\n        <div className=\"img-name\">\n          <img\n            className=\"gravatar-img\"\n            data-testid=\"header-profile-picture\"\n            src={ this.imgGravatar(getEmail) }\n            alt=\"Gravatar do player\"\n          />\n          <p className=\"name-user\" data-testid=\"header-player-name\">{getName}</p>\n        </div>\n        <div className=\"text-score\">\n          <p className=\"score\">Score</p>\n          <p\n            className=\"score\"\n            data-testid=\"header-score\"\n          >\n            { JSON.parse(localStorage.getItem('state')).player.score || 0}\n          </p>\n        </div>\n      </header>\n    );\n  }\n}\n\nHeader.propTypes = {\n  getEmail: PropTypes.string.isRequired,\n  getName: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  getEmail: state.user.email,\n  getName: state.user.name,\n  score: state.game.score,\n});\n\nexport default connect(mapStateToProps)(Header);\n","export const UPDATE_TIMER = 'UPDATE_TIMER';\n\nexport const updateTimer = (payload) => ({ type: UPDATE_TIMER, payload });\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { updateTimer as updateTimerAction } from '../actions/questionTimerActions';\nimport { handleUserAnswer as handleUserAnswerAction } from '../actions/gameActions';\nimport '../styles/timer.css';\n\nclass Timer extends Component {\n  constructor() {\n    super();\n    this.state = { interval: null, timer: 30 };\n    this.verifyTimer = this.verifyTimer.bind(this);\n    this.setStateInterval = this.setStateInterval.bind(this);\n  }\n\n  componentDidMount() {\n    this.setStateInterval();\n  }\n\n  setStateInterval() {\n    const ONE_SECOND = 1000;\n    this.setState({ interval: setInterval(() => {\n      this.setState((prev) => ({ timer: prev.timer - 1 }), () => this.verifyTimer());\n    }, ONE_SECOND) });\n  }\n\n  verifyTimer() {\n    const { questionTimer: { timerIsOn }, updateTimer, handleUserAnswer } = this.props;\n    const { interval, timer } = this.state;\n    if (timer === 0 || !timerIsOn) {\n      updateTimer({ timerValue: timer, timerIsOn: false });\n      handleUserAnswer();\n      return clearInterval(interval);\n    }\n    return updateTimer({ timerValue: timer, timerIsOn: true });\n  }\n\n  render() {\n    const { timer } = this.state;\n    return (\n      <div className=\"circular\">\n        <div className=\"inner\" />\n        <div className=\"outer\" />\n        <div className=\"numb\">\n          {timer}\n        </div>\n        <div className=\"circle\">\n          <div className=\"dot\">\n            <span />\n          </div>\n          <div className=\"bar left\">\n            <div className=\"progress\" />\n          </div>\n          <div className=\"bar right\">\n            <div className=\"progress\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nTimer.propTypes = {\n  questionTimer: PropTypes.objectOf(PropTypes.any).isRequired,\n  updateTimer: PropTypes.func.isRequired,\n  handleUserAnswer: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ questionTimer }) => ({\n  questionTimer,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateTimer: (payload) => dispatch(updateTimerAction(payload)),\n  handleUserAnswer: () => dispatch(handleUserAnswerAction()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Timer);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Timer from './Timer';\nimport '../styles/questions.css';\n\nclass Question extends Component {\n  constructor() {\n    super();\n    this.answerButtons = this.answerButtons.bind(this);\n  }\n\n  answerButtons(question) {\n    const { game: { answers }, handleResponse } = this.props;\n    return answers.map((answer, i) => {\n      if (answer.item === question.correct_answer) {\n        return (\n          <li key={ i }>\n            <button\n              value={ i }\n              type=\"button\"\n              data-testid=\"correct-answer\"\n              disabled={ answer.isDisabled }\n              onClick={ handleResponse }\n              style={ { border: answer.border } }\n            >\n              {answer.item}\n            </button>\n          </li>);\n      }\n\n      return (\n        <li key={ i }>\n          <button\n            type=\"button\"\n            data-testid={ `wrong-answer-${i}` }\n            value={ i }\n            disabled={ answer.isDisabled }\n            onClick={ handleResponse }\n            style={ { border: answer.border } }\n          >\n            {answer.item}\n          </button>\n        </li>\n      );\n    });\n  }\n\n  render() {\n    const { game: { questions, index, nextQuestionBtn },\n      handleNextQuestion, questionTimer: { timerIsOn, timerValue } } = this.props;\n    const question = questions[index];\n    return (\n      <div className=\"background\">\n        <section className=\"containner-section-question\">\n          <div className=\"card-question\">\n            { timerIsOn ? <Timer />\n              : (\n                <div className=\"circular\">\n                  <div className=\"inner\" />\n                  <div className=\"outer\" />\n                  <div className=\"numb\">\n                    {timerValue}\n                  </div>\n                  <div\n                    className=\"circle\"\n                    style={ { backgroundColor: '#273746' } }\n                  />\n                </div>\n              )}\n            <h3 data-testid=\"question-category\">\n              {question.category}\n            </h3>\n            <p data-testid=\"question-text\">\n              {question.question}\n            </p>\n          </div>\n          <div className=\"card-options\" id=\"answers\">\n            <ul>\n              {this.answerButtons(question)}\n            </ul>\n          </div>\n        </section>\n        {nextQuestionBtn\n        && (\n          <button\n            className=\"btn-next\"\n            onClick={ handleNextQuestion }\n            type=\"button\"\n            data-testid=\"btn-next\"\n          >\n            Próxima\n          </button>)}\n      </div>\n    );\n  }\n}\n\nQuestion.propTypes = {\n  game: PropTypes.objectOf(PropTypes.any).isRequired,\n  handleNextQuestion: PropTypes.func.isRequired,\n  handleResponse: PropTypes.func.isRequired,\n  questionTimer: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = ({ game, questionTimer }) => ({\n  game,\n  questionTimer,\n});\n\nexport default connect(mapStateToProps, null)(Question);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport generateRandomAnswers,\n{ attPlayerfromLS } from '../helpers/index';\nimport Question from '../components/Question';\nimport { handleUserAnswer as handleUserAnswerAction,\n  nextQuestion as nextQuestionAction,\n  setAnswers as setAnswersAction } from '../actions/gameActions';\nimport { updateTimer as updateTimerAction } from '../actions/questionTimerActions';\n\nclass Jogo extends Component {\n  constructor() {\n    super();\n    this.handleResponse = this.handleResponse.bind(this);\n    this.handleNextQuestion = this.handleNextQuestion.bind(this);\n  }\n\n  componentDidMount() {\n    const { game: { questions, index }, setAnswers, history } = this.props;\n    if (questions.length === 0) return history.push('/');\n    setAnswers(generateRandomAnswers(questions, index));\n  }\n\n  handleResponse({ target: { value } }) {\n    const { handleUserAnswer, game: { answers },\n      questionTimer, updateTimer } = this.props;\n    updateTimer({ timerValue: questionTimer.timerValue, timerIsOn: false });\n    attPlayerfromLS(answers[value], questionTimer.timerValue);\n    handleUserAnswer();\n  }\n\n  handleNextQuestion() {\n    const { game: { questions, index },\n      setAnswers, history, nextQuestion, updateTimer } = this.props;\n    nextQuestion();\n    updateTimer({ timerValue: 30, timerIsOn: true });\n    return index + 1 !== questions.length\n      ? setAnswers(generateRandomAnswers(questions, (index + 1)))\n      : history.push('/feedback');\n  }\n\n  render() {\n    const { game: { infoIsLoaded } } = this.props;\n    return (\n      <>\n        <Header />\n        <main>\n          {infoIsLoaded\n        && <Question\n          handleNextQuestion={ this.handleNextQuestion }\n          handleResponse={ this.handleResponse }\n        />}\n        </main>\n      </>\n    );\n  }\n}\n\nJogo.propTypes = {\n  game: PropTypes.objectOf(PropTypes.any).isRequired,\n  setAnswers: PropTypes.func.isRequired,\n  handleUserAnswer: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  nextQuestion: PropTypes.func.isRequired,\n  updateTimer: PropTypes.func.isRequired,\n  questionTimer: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = ({ game, questionTimer }) => ({\n  game,\n  questionTimer,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setAnswers: (payload) => dispatch(setAnswersAction(payload)),\n  handleUserAnswer: () => dispatch(handleUserAnswerAction()),\n  nextQuestion: () => dispatch(nextQuestionAction()),\n  updateTimer: (payload) => dispatch(updateTimerAction(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Jogo);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/settings.css';\n\nexport default class Select extends Component {\n  render() {\n    const { handleChange } = this.props;\n\n    return (\n      <>\n        <label htmlFor=\"howMuch\">\n          Quantity:\n          <select\n            className=\"quantity-select\"\n            name=\"howMuch\"\n            id=\"howMuch\"\n            onChange={ handleChange }\n          >\n            <option name=\"howMuch\" value=\"5\">5</option>\n            <option name=\"howMuch\" value=\"10\">10</option>\n            <option name=\"howMuch\" value=\"15\">15</option>\n            <option name=\"howMuch\" value=\"20\">20</option>\n          </select>\n        </label>\n        <label htmlFor=\"difficulty\">\n          Difficulty:\n          <select\n            className=\"difficulty-select\"\n            name=\"difficulty\"\n            id=\"difficulty\"\n            onChange={ handleChange }\n          >\n            <option name=\"difficulty\" value=\"\">Any</option>\n            <option name=\"difficulty\" value=\"easy\">Easy</option>\n            <option name=\"difficulty\" value=\"medium\">Medium</option>\n            <option name=\"difficulty\" value=\"hard\">Hard</option>\n          </select>\n        </label>\n        <label htmlFor=\"type\">\n          Type:\n          <select\n            className=\"type-select\"\n            name=\"type\"\n            id=\"type\"\n            onChange={ handleChange }\n          >\n            <option name=\"type\" value=\"\">Any</option>\n            <option name=\"type\" value=\"boolean\">True / False</option>\n            <option name=\"type\" value=\"multiple\">multiple choise</option>\n          </select>\n        </label>\n      </>\n    );\n  }\n}\n\nSelect.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Select from '../components/Select';\nimport { setNewSettings as setNewSettingsAction } from '../actions/settingsActions';\nimport '../styles/settings.css';\n\nclass Settings extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      howMuch: 5,\n      category: '',\n      difficulty: '',\n      type: '',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.saveSettings = this.saveSettings.bind(this);\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({ [name]: value });\n  }\n\n  saveSettings() {\n    const { howMuch, category, difficulty, type } = this.state;\n    const { history, setNewSettings } = this.props;\n    setNewSettings({ howMuch, category, difficulty, type });\n    history.push('/');\n  }\n\n  render() {\n    const { settings: { categories } } = this.props;\n\n    return (\n      <main className=\"main-containner\">\n        <h2 className=\"text-settings\" data-testid=\"settings-title\"> Settings </h2>\n        <img\n          className=\"img-engrenagem\"\n          src=\"/engrenagem.png\"\n          alt=\"imagem de engrenagem\"\n        />\n        <form className=\"containner-settings-form\">\n          <label htmlFor=\"category\">\n            Category:\n            <select\n              className=\"category-select\"\n              name=\"category\"\n              id=\"category\"\n              onChange={ this.handleChange }\n            >\n              <option name=\"category\" value=\"\">Any</option>\n              {categories.map((category) => (\n                <option\n                  key={ category.id }\n                  name=\"category\"\n                  value={ category.id }\n                >\n                  {category.name}\n                </option>\n              ))}\n            </select>\n          </label>\n          <Select handleChange={ this.handleChange } />\n        </form>\n        <button type=\"button\" onClick={ this.saveSettings }>Save Settings</button>\n      </main>\n    );\n  }\n}\n\nSettings.propTypes = {\n  settings: PropTypes.objectOf(PropTypes.any).isRequired,\n  setNewSettings: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nconst mapStateToProps = ({ settings }) => ({\n  settings,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setNewSettings: (payload) => dispatch(setNewSettingsAction(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { getStatePlayer } from '../helpers/index';\nimport '../styles/feedback.css';\n\nexport class Feedback extends Component {\n  render() {\n    const { assertions, score } = getStatePlayer().player;\n    const numFeedback = 3;\n    const feedback = assertions >= numFeedback ? 'Mandou bem!' : 'Podia ser melhor...';\n    const { history } = this.props;\n    return (\n      <>\n        <Header />\n        <main className=\"containner-main-feedback\">\n          <div className=\"card-feedback\">\n            <div className=\"card-text-contains\">\n              <h4 data-testid=\"feedback-text\">{feedback}</h4>\n            </div>\n            <div className=\"card-text-contains\">\n              <h4>Score:</h4>\n              <h4 data-testid=\"feedback-total-score\">{score}</h4>\n            </div>\n            <div className=\"card-text-contains\">\n              <h4>successes:</h4>\n              <h4 data-testid=\"feedback-total-question\">{assertions}</h4>\n            </div>\n            <div className=\"containner-btn-feedback\">\n              <button\n                type=\"button\"\n                data-testid=\"btn-play-again\"\n                onClick={ () => history.push('/') }\n              >\n                Jogar novamente\n              </button>\n              <button\n                onClick={ () => history.push('/ranking') }\n                type=\"button\"\n                data-testid=\"btn-ranking\"\n              >\n                Ver Ranking\n              </button>\n            </div>\n          </div>\n        </main>\n      </>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Feedback;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/ranking.css';\n\nexport class Ranking extends Component {\n  render() {\n    const arrayPlayers = JSON.parse(localStorage.getItem('ranking'));\n    arrayPlayers.sort((a, b) => b.score - a.score);\n    const { history } = this.props;\n    const podio = 3;\n    return (\n      <main className=\"main-containner-ranking\">\n        <h2 data-testid=\"ranking-title\">Ranking</h2>\n        <div className=\"containner-btn\">\n          <button\n            className=\"btn-ranking\"\n            onClick={ () => history.push('/') }\n            type=\"button\"\n            data-testid=\"btn-go-home\"\n          >\n            Voltar\n          </button>\n        </div>\n        <div className=\"containner-podio\">\n          { arrayPlayers.slice(0, podio).map((i, position) => (\n            <div className=\"podio-space\" key={ position }>\n              <img\n                className={ `img-gravatar${position}` }\n                src={ i.picture }\n                alt=\"gravatar\"\n              />\n              <p data-testid={ `player-name-${position}` }>{i.name}</p>\n              <div className={ `position${position}` }>\n                <p data-testid={ `player-score-${position}` }>{ i.score }</p>\n                <div className={ `img-podio${position}` } />\n              </div>\n            </div>\n          )) }\n        </div>\n        <section className=\"containner-raking-geral\">\n          {arrayPlayers.slice(podio).map((item, index) => (\n            <div className=\"card-podio\" key={ index + podio }>\n              <img src={ item.picture } alt=\"raking\" />\n              <div className=\"infor-player-containner\">\n                <h3 data-testid={ `player-name-${index + podio}` }>{item.name}</h3>\n                <span data-testid={ `player-score-${index + podio}` }>{item.score}</span>\n              </div>\n            </div>\n          ))}\n        </section>\n      </main>\n    );\n  }\n}\n\nRanking.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n\nexport default Ranking;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { SET_USER } from '../actions/userActions';\n\nconst INITIAL_STATE = {\n  email: '',\n  name: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_USER:\n  {\n    const { email, name } = action.payload;\n    return {\n      ...state,\n      email,\n      name,\n    };\n  }\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","import { HANDLE_ANSWER, NEXT_QUESTION,\n  SET_ANSWERS, SET_QUESTIONS } from '../actions/gameActions';\n\nconst INITIAL_STATE = {\n  questions: [],\n  index: 0,\n  infoIsLoaded: false,\n  answers: [],\n  nextQuestionBtn: false,\n  score: 0,\n};\n\nconst game = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_QUESTIONS:\n    return {\n      ...state,\n      score: 0,\n      questions: action.payload.results,\n      infoIsLoaded: true,\n    };\n  case SET_ANSWERS:\n    return {\n      ...state,\n      answers: action.payload,\n    };\n  case HANDLE_ANSWER:\n    return {\n      ...state,\n      score: JSON.parse(localStorage.getItem('state')).player.score,\n      nextQuestionBtn: true,\n      answers: state.answers.map((item) => {\n        item.border = item.isCorrect\n          ? '3px solid rgb(6, 240, 15)' : '3px solid rgb(255, 0, 0)';\n        item.isDisabled = true;\n        return item;\n      }),\n    };\n  case NEXT_QUESTION:\n    return {\n      ...state,\n      nextQuestionBtn: false,\n      index: state.index === (state.questions.length - 1) ? 0 : (state.index + 1),\n    };\n  default:\n    return state;\n  }\n};\n\nexport default game;\n","import { SET_CATEGORIES, SET_NEW_SETTINGS } from '../actions/settingsActions';\n\nconst INITIAL_STATE = {\n  categories: [],\n  chosedSettings: {\n    howMuch: 5,\n    category: '',\n    difficulty: '',\n    type: '',\n  },\n};\n\nconst settings = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_CATEGORIES:\n    return {\n      ...state,\n      categories: action.payload.trivia_categories,\n    };\n  case SET_NEW_SETTINGS:\n    return {\n      ...state,\n      chosedSettings: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default settings;\n","import { UPDATE_TIMER } from '../actions/questionTimerActions';\n\nconst INITIAL_STATE = {\n  timerValue: 30,\n  timerIsOn: true,\n};\n\nconst questionTimer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case UPDATE_TIMER:\n    return {\n      ...state,\n      timerValue: action.payload.timerValue,\n      timerIsOn: action.payload.timerIsOn,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default questionTimer;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport game from './game';\nimport settings from './settings';\nimport questionTimer from './questionTimer';\n\nconst rootReducer = combineReducers({\n  user,\n  game,\n  settings,\n  questionTimer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Login from './pages/Login';\nimport Jogo from './pages/Jogo';\nimport Settings from './pages/Settings';\nimport { Feedback } from './pages/Feedback';\nimport { Ranking } from './pages/Ranking';\n\nexport default function App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route path=\"/jogo\" component={ Jogo } />\n      <Route path=\"/settings\" component={ Settings } />\n      <Route path=\"/feedback\" component={ Feedback } />\n      <Route path=\"/ranking\" component={ Ranking } />\n    </Switch>\n  );\n}\n"],"sourceRoot":""}