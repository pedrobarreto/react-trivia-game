{"version":3,"sources":["actions/types/index.js","services/index.js","components/ListBox.jsx","trivia.png","pages/Config.js","actions/index.js","reducers/user.js","reducers/settings.js","reducers/index.js","store/index.js","utils/localStorage.js","pages/Ranking.js","pages/Feedback.js","pages/Game.js","pages/Login.js","pages/About.js","components/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["LOGIN_INFO","SET_SCORE","SET_CONFIG","RESET_CONFIG","fetchToken","a","fetch","res","json","token","fetchQuestions","amount","category","difficulty","type","results","getCategories","trivia_categories","classNames","classes","filter","Boolean","join","ListBox","this","props","value","name","label","curDisplay","array","onChange","Label","className","Button","as","Fragment","leave","leaveFrom","leaveTo","Options","map","cur","Option","active","id","selected","Component","DEFAULT_DIFFICULTY","Todas","hard","medium","easy","DEFAULT_TYPES","Todos","multiple","boolean","DEFAULT_NUMBER","Config","state","categories","settings","bind","handleChange","resetDefault","handleSubmit","setState","getCategoriesFetch","prevState","resetConfig","history","push","event","preventDefault","setSettings","src","logo","alt","onSubmit","defaultValue","length","find","Number","onClick","React","connect","dispatch","payload","INITIAL_STATE","email","assertions","score","loginReducer","action","settingsReducer","rootReducer","combineReducers","user","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","window","Cypress","TOKEN","STATE","RANKING","addTokenInStorage","localStorage","setItem","saveScoreInStorage","getState","JSON","stringify","player","generateInfos","hash","parse","getItem","md5","toString","getRankings","sort","Ranking","i","picture","to","Feedback","lowScore","highScore","timer","Game","questions","curQuestion","showAnswers","next","startCountdown","addingQuestion","shuffleQuestions","handleClick","updateTimer","nextQuestion","nextQuestionState","formatText","updateScore","difficultyRes","categoryRes","typeRes","result","alternatives","correct_answer","incorrect_answers","target","string","unescape","encodeURIComponent","replace","disabled","addRanking","random","Math","round","arrayIndex","arrayRandom","seconds","completed","start","api","intervalDelay","date","Date","now","onComplete","renderer","answer","correct","question","renderButtons","Login","sendLoginInfo","redirectToConfig","htmlFor","autoComplete","required","placeholder","enableButton","About","href","Header","Group","open","enter","enterFrom","enterTo","Panel","focus","App","exact","path","component","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c25d264.chunk.js","sourcesContent":["export const LOGIN_INFO = 'LOGIN_INFO';\nexport const SET_SCORE = 'SET_SCORE';\nexport const SET_CONFIG = 'SET_CONFIG';\nexport const RESET_CONFIG = 'RESET_CONFIG';\n","const endpointGetToken = 'https://opentdb.com/api_token.php?command=request';\nconst DEFAULT_AMOUNT = 5;\n\nexport const fetchToken = async () => {\n  const res = await fetch(endpointGetToken);\n  const json = await res.json();\n  return json.token;\n};\n\nexport const fetchQuestions = async (token, amount = DEFAULT_AMOUNT, category = '', difficulty = '', type='') => {\n  const res = await fetch(`https://opentdb.com/api.php?amount=${amount}&token=${token}&category=${category}&difficulty=${difficulty}&type=${type}`);\n  const json = await res.json();\n  return json.results;\n};\n\nexport const getCategories = async () => {\n  const res = await fetch('https://opentdb.com/api_category.php');\n  const json = await res.json();\n  return json.trivia_categories;\n}\n","import React, { Fragment, Component } from 'react';\nimport { Listbox, Transition } from '@headlessui/react';\nimport { CheckIcon, SelectorIcon } from '@heroicons/react/solid';\nimport PropTypes from 'prop-types';\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nclass ListBox extends Component {\n  render() {\n    const { value, name, label, curDisplay, array, onChange } = this.props;\n    return (\n      <Listbox value={value} onChange={(value) => onChange(value, name)}>\n        <Listbox.Label className=\"block text-sm font-medium text-gray-700\">\n          {label}\n        </Listbox.Label>\n        <div className=\"mt-1 relative\">\n          <Listbox.Button className=\"relative w-full bg-white border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\n            <span className=\"flex items-center\">\n              <span className=\"ml-3 block truncate\">{curDisplay}</span>\n            </span>\n            <span className=\"ml-3 absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n              <SelectorIcon className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n            </span>\n          </Listbox.Button>\n\n          <Transition as={Fragment} leave=\"transition ease-in duration-100\" leaveFrom=\"opacity-100\" leaveTo=\"opacity-0\">\n            <Listbox.Options className=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-56 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n              {array.map((cur) => (\n                <Listbox.Option\n                  key={cur.id}\n                  className={({ active }) =>\n                    classNames(\n                      active ? 'text-white bg-indigo-600' : 'text-gray-900',\n                      'cursor-default select-none relative py-2 pl-3 pr-9'\n                    )\n                  }\n                  value={cur.id}\n                >\n                  {({ selected, active }) => (\n                    <>\n                      <div className=\"flex items-center\">\n                        <span className={classNames(selected ? 'font-semibold' : 'font-normal', 'ml-3 block truncate')}>\n                          {cur.name}\n                        </span>\n                      </div>\n\n                      {selected ? (\n                        <span\n                          className={classNames(\n                            active ? 'text-white' : 'text-indigo-600',\n                            'absolute inset-y-0 right-0 flex items-center pr-4'\n                          )}\n                        >\n                          <CheckIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                        </span>\n                      ) : null}\n                    </>\n                  )}\n                </Listbox.Option>\n              ))}\n            </Listbox.Options>\n          </Transition>\n        </div>\n      </Listbox>\n    );\n  }\n};\n\nListBox.propTypes = { \n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  curDisplay: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  array: PropTypes.arrayOf(PropTypes.shape({ \n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  })).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default ListBox;\n","export default __webpack_public_path__ + \"static/media/trivia.7e9181d3.png\";","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setConfig as setConfigAction, resetConfig as resetConfigAction } from '../actions';\nimport { getCategories as getCategoriesFetch } from '../services';\nimport { ShieldExclamationIcon, SaveIcon } from '@heroicons/react/solid';\nimport ListBox from '../components/ListBox';\nimport logo from '../trivia.png';\n\nconst DEFAULT_DIFFICULTY = {\n  Todas: 'Todas',\n  hard: 'Dificil',\n  medium: 'Medio',\n  easy: 'Facil',\n}\n\nconst DEFAULT_TYPES = {\n  Todos: 'Todos',\n  multiple: 'Multipla Escolha',\n  boolean: 'Verdadeiro ou Falso'\n}\n\nconst DEFAULT_NUMBER = [\n  { id: 5, name: 5 },\n  { id: 7, name: 7 },\n  { id: 10, name: 10 },\n  { id: 15, name: 15 },\n  { id: 20, name: 20 },\n];\n\nclass Config extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [], \n      settings: {\n        amount: 5,\n        difficulty: 'Todas',\n        category: 0,\n        type: 'Todos',\n      },\n    };\n    this.getCategories = this.getCategories.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.resetDefault = this.resetDefault.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { settings } = this.props;\n    this.getCategories();\n    this.setState({ settings })\n  }\n\n  async getCategories() {\n    const categories = await getCategoriesFetch();\n    this.setState({\n      categories: [{ id: 0, name: 'Todas'}, ...categories],\n    });\n  }\n\n  handleChange(value, name) {\n    this.setState((prevState) => ({\n      settings: {\n        ...prevState.settings,\n        [name]: value,\n      }\n    }))\n  }\n\n  resetDefault() {\n    const { resetConfig, history } = this.props;\n    resetConfig();\n    history.push('/');\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const { settings } = this.state;\n    const { setSettings, history } = this.props;\n    setSettings(settings);\n    history.push('/');\n  }\n\n  render() {\n    const { settings: { amount, difficulty, category, type }, categories } = this.state;\n    return (\n      <div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8 sm:border-solid sm:border-gray-200 sm:p-3 sm:border-2 sm:rounded-xl sm:shadow-md\">\n          <div className=\"relative mt-3\">\n            <img\n              className=\"mx-auto h-12 w-auto\"\n              src={logo}\n              alt=\"Logo\"\n            />\n            <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Configurações</h2>\n          </div>\n          <form className=\"mt-8 space-y-6\" onSubmit={this.handleSubmit}>\n            <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n            <div className=\"rounded-md shadow-sm -space-y-px\">\n              <div>\n                <ListBox\n                  value={amount}\n                  name=\"amount\"\n                  label=\"Quantidade de perguntas\"\n                  curDisplay={amount}\n                  array={DEFAULT_NUMBER}\n                  onChange={this.handleChange}\n                />\n                <ListBox\n                  value={difficulty}\n                  name=\"difficulty\"\n                  label=\"Dificuldade\"\n                  curDisplay={DEFAULT_DIFFICULTY[difficulty]}\n                  array={[\n                    { name: 'Todas', id: 'Todas' },\n                    { name: 'Dificil', id: 'hard' },\n                    { name: 'Medio', id: 'medium' },\n                    { name: 'Facil', id: 'easy' },\n                  ]}\n                  onChange={this.handleChange}\n                />\n                <ListBox\n                  value={category}\n                  name=\"category\"\n                  label=\"Categoria\"\n                  curDisplay={categories.length > 0 ? categories.find((cur) => Number(cur.id) === category).name : 'Todas'}\n                  array={categories}\n                  onChange={this.handleChange}\n                />\n                <ListBox\n                  value={type}\n                  name=\"type\"\n                  label=\"Tipo\"\n                  curDisplay={DEFAULT_TYPES[type]}\n                  array={[\n                    { name: 'Todos', id: 'Todos' },\n                    { name: 'Multipla Escolha', id: 'multiple' },\n                    { name: 'Verdadeiro ou Falso', id: 'boolean' }\n                  ]}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n            <div>\n              <button\n                type=\"button\"\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 disabled:opacity-60 mb-1\"\n                data-testid=\"btn-play\"\n                onClick={this.resetDefault}\n              >\n                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                  <ShieldExclamationIcon className=\"h-5 w-5 text-white group-hover:text-red-200\" aria-hidden=\"true\" />\n                </span>\n                Resetar Configurações\n              </button>\n              <button\n                type=\"submit\"\n                className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-60 mb-1\"\n                data-testid=\"btn-play\"\n              >\n                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                  <SaveIcon className=\"h-5 w-5 text-white group-hover:text-indigo-200\" aria-hidden=\"true\" />\n                </span>\n                Salvar\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ settings }) => ({\n  settings,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setSettings: (settings) => dispatch(setConfigAction(settings)),\n  resetConfig: () => dispatch(resetConfigAction()),\n});\n\nConfig.propTypes = {\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  settings: PropTypes.shape({\n    amount: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    difficulty: PropTypes.string.isRequired,\n    category: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    type: PropTypes.string.isRequired,\n  }).isRequired,\n  setSettings: PropTypes.func.isRequired,\n  resetConfig: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Config);\n","import { LOGIN_INFO, SET_SCORE, SET_CONFIG, RESET_CONFIG } from './types';\n\nexport const sendLoginInfo = (payload) => ({\n  type: LOGIN_INFO,\n  payload,\n});\n\nexport const setScore = (payload) => ({\n  type: SET_SCORE,\n  payload,\n});\n\nexport const setConfig = (payload) => ({\n  type: SET_CONFIG,\n  payload,\n});\n\nexport const resetConfig = () => ({\n  type: RESET_CONFIG,\n});\n","import { LOGIN_INFO, SET_SCORE } from '../actions/types';\n\nconst INITIAL_STATE = {\n  name: 'Default User',\n  email: '',\n  assertions: 0,\n  score: 0,\n};\n\nconst loginReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case LOGIN_INFO:\n    return {\n      ...state,\n      name: action.payload.name,\n      email: action.payload.email,\n    };\n  case SET_SCORE:\n    return {\n      ...state,\n      assertions: action.payload.assertions,\n      score: action.payload.score,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default loginReducer;\n","import { SET_CONFIG, RESET_CONFIG } from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  amount: 5,\n  difficulty: 'Todas',\n  category: 0,\n  type: 'Todos',\n}\n\nconst settingsReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case SET_CONFIG:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case RESET_CONFIG:\n      return {\n        ...state,\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  };\n};\n\nexport default settingsReducer;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport settings from './settings';\n\nconst rootReducer = combineReducers({ user, settings });\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\nif (window.Cypress) {\n  window.store = store;\n}\n\nexport default store;\n","import md5 from 'crypto-js/md5';\nimport store from '../store';\n\nconst TOKEN = 'token';\nconst STATE = 'state';\nconst RANKING = 'ranking';\n\nexport const addTokenInStorage = (token) => {\n  localStorage.setItem(TOKEN, token);\n};\n\nexport const getTokenFromStorage = () => {\n  if (localStorage[TOKEN]) return localStorage[TOKEN];\n  return '';\n};\n\nexport const getUserInfo = () => {\n  if (localStorage[STATE]) return localStorage[STATE];\n  return {};\n};\n\nexport const saveScoreInStorage = (assertions = 0, score = 0) => {\n  const { user: { name, email } } = store.getState();\n  localStorage.setItem(STATE, JSON.stringify({\n    player: { name, email, assertions, score },\n  }));\n};\n\nexport function generateInfos() {\n  if (!localStorage[STATE]) return { name: 'Default User', score: 0, hash: '', assertions: 0 }\n  const { player: {\n    name,\n    email,\n    score,\n    assertions,\n  } } = JSON.parse(localStorage.getItem(STATE));\n  const hash = md5(email).toString();\n  return { name, score, hash, assertions };\n}\n\nexport function addRanking(name, score, picture) {\n  if (localStorage[RANKING]) {\n    const array = JSON.parse(localStorage[RANKING]);\n    array.push({ name, score, picture });\n    localStorage[RANKING] = JSON.stringify(array);\n  } else {\n    localStorage.setItem(RANKING, JSON.stringify([{ name, score, picture }]));\n  }\n}\n\nexport function getRankings() {\n  if (localStorage[RANKING]) {\n    const array = JSON.parse(localStorage[RANKING]);\n    array.sort(({ score: a }, { score: b }) => b - a);\n    return array;\n  }\n  return [];\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getRankings } from '../utils/localStorage';\nimport { PlayIcon } from '@heroicons/react/solid';\nimport logo from '../trivia.png';\n\nexport default class Ranking extends Component {\n  render() {\n    return (\n      <div className=\"flex flex-col mt-4\">\n        <div className=\"min-h-full flex items-center justify-center py-6 px-4 sm:px-6 lg:px-8\">\n          <div className=\"max-w-md w-full space-y-8 sm:p-3\">\n            <div className=\"relative\">\n              <img\n                className=\"mx-auto h-12 w-auto\"\n                src={logo}\n                alt=\"Logo\"\n              />\n              <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Ranking</h2>\n            </div>\n          </div>\n        </div>\n        <div className=\"-my-2 overflow-x-auto flex justify-center\">\n          <div className=\"py-2 align-middle inline-block max-w-full sm:px-6 lg:px-8\">\n            <div className=\"shadow overflow-hidden border-b border-t border-gray-300 rounded-lg\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"pl-5 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider\">NOME</th>\n                    <th className=\"px-5 py-3 text-left text-sm font-medium text-gray-500 uppercase tracking-wider\">SCORE</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {getRankings().map(({ name, score, picture }, i) => (\n                    <tr key={ i }>\n                      <td className=\"px-3 py-4 whitespace-nowrap\">\n                        <div className=\"flex items-center\">\n                          <div className=\"flex-shrink-0 h-10 w-10\">\n                            <img className=\"h-10 w-10 rounded-full\" src={picture} alt=\"\" />\n                          </div>\n                          <div className=\"ml-4\">\n                            <div className=\"text-sm font-medium text-gray-900 max-w-mintablename md:max-w-xl 2xl:max-w-7xl truncate\">{name}</div>\n                          </div>\n                        </div>\n                      </td>\n                      <td className=\"px-2 py-4 whitespace-nowrap\">\n                        <span className=\"px-5 inline-flex text-xl leading-5 font-semibold tabular-nums text-left\">\n                          {score}\n                        </span>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <Link to=\"/\">\n              <button data-testid=\"btn-play-again\" type=\"button\" className=\"my-6 group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-60 mb-3\">\n                <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                  <PlayIcon className=\"h-5 w-5 text-white group-hover:text-indigo-200\" aria-hidden=\"true\" />\n                </span>\n                Jogar novamente\n              </button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport logo from '../trivia.png';\nimport { PlayIcon, PresentationChartLineIcon } from '@heroicons/react/outline';\n\nconst AVERAGE = 3;\n\nclass Feedback extends React.Component {\n  lowScore() {\n    return (\n      <span data-testid=\"feedback-text\">Podia ser melhor...</span>\n    );\n  }\n\n  highScore() {\n    return (\n      <span data-testid=\"feedback-text\">Mandou bem!</span>\n    );\n  }\n\n  render() {\n    const { score, assertions } = this.props;\n    return (\n      <div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8 sm:border-solid sm:border-gray-200 sm:p-3 sm:border-2 sm:rounded-xl sm:shadow-md\">\n          <div className=\"mt-3\">\n            <img\n              className=\"mx-auto h-12 w-auto\"\n              src={logo}\n              alt=\"Logo\"\n            />\n            <h2 className=\"mt-6 text-center text-2xl font-bold text-gray-900\">Resultado</h2>\n          </div>\n          <div className=\"mt-8 space-y-6\">\n            <div className=\"rounded-md shadow-sm\">\n              <div className=\"appearance-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\">\n                <p className=\"font-mono text-center text-xl\">\n                  {assertions < AVERAGE ? this.lowScore() : this.highScore()}\n                </p>\n                <p className=\"font-mono text-center text-xl\" data-testid=\"feedback-total-question\">Acertos: {assertions}</p>\n                <p className=\"font-mono text-center  text-xl\"\n                data-testid=\"feedback-total-score\">Score: {score}</p>\n              </div>\n              <div className=\"mt-5\">\n                <Link to=\"/\">\n                  <button data-testid=\"btn-play-again\" type=\"button\" className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-60 mb-3\">\n                    <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                      <PlayIcon className=\"h-5 w-5 text-white group-hover:text-indigo-200\" aria-hidden=\"true\" />\n                    </span>\n                    Jogar novamente\n                  </button>\n                </Link>\n                <Link to=\"/ranking\">\n                  <button data-testid=\"btn-ranking\" type=\"button\" className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-60\">\n                    <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                      <PresentationChartLineIcon className=\"h-5 w-5 text-white group-hover:text-indigo-200\" aria-hidden=\"true\" />\n                    </span>\n                    Ver Ranking\n                  </button>\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user }) => ({\n  assertions: user.assertions,\n  score: user.score,\n});\n\nexport default connect(mapStateToProps, null)(Feedback);\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Countdown from 'react-countdown';\nimport PropTypes from 'prop-types';\nimport { fetchQuestions } from '../services';\nimport { ArrowRightIcon } from '@heroicons/react/outline';\nimport { saveScoreInStorage, addRanking, generateInfos } from '../utils/localStorage';\nimport { setScore as setScoreAction } from '../actions';\nimport '../style/game.css';\nimport { Link } from 'react-router-dom';\n\nconst TIMER = 30000;\nconst ONE_SECOND = 1000;\nlet timer = 0;\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nclass Game extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: [],\n      curQuestion: 0,\n      showAnswers: false,\n      difficulty: 1,\n      next: false,\n      startCountdown: false,\n    };\n    this.addingQuestion = this.addingQuestion.bind(this);\n    this.shuffleQuestions = this.shuffleQuestions.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.timer = this.timer.bind(this);\n    this.updateTimer = this.updateTimer.bind(this);\n    this.nextQuestion = this.nextQuestion.bind(this);\n    this.nextQuestionState = this.nextQuestionState.bind(this);\n    this.formatText = this.formatText.bind(this);\n  }\n\n  componentDidMount() {\n    this.addingQuestion();\n  }\n\n  async addingQuestion() {\n    const { updateScore, amount, difficulty, type, category } = this.props;\n    const difficultyRes = difficulty === 'Todas' ? '' : difficulty;\n    const categoryRes = category == 0 ? '' : category;\n    const typeRes = type === 'Todos' ? '' : type;\n    saveScoreInStorage();\n    updateScore({ score: 0, assertions: 0 });\n    const token = localStorage.getItem('token');\n    const result = await fetchQuestions(token, amount, categoryRes, difficultyRes, typeRes);\n    const questions = result.map((cur) => {\n      const res = { ...cur };\n      res.alternatives = this.shuffleQuestions(\n        [cur.correct_answer, ...cur.incorrect_answers],\n      );\n      return res;\n    });\n    if (questions.length === 0) return;\n    this.setState({\n      questions,\n      difficulty: questions[0].difficulty,\n      showAnswers: false,\n      next: false,\n      startCountdown: true });\n  }\n\n  handleClick({ target: { name } }) {\n    const { updateScore, score, assertions } = this.props;\n    const { difficulty } = this.state;\n    const TEN = 10;\n    const points = { hard: 3, medium: 2, easy: 1 };\n    if (name === 'correct') {\n      const result = TEN + (Number(timer) * points[difficulty]);\n      saveScoreInStorage(assertions + 1, score + result);\n      updateScore({ score: score + result, assertions: assertions + 1 });\n    }\n    this.setState({ showAnswers: true, next: true, startCountdown: false });\n  }\n\n  formatText(string) {\n    // função do Lucas Rodrigues Turma 08\n    // encodeURIComponent faz tudo oq nao é letra e numero ficar no formato Percent Encoding ex: ' ' = %20\n    // referencia https://www.w3schools.com/tags/ref_urlencode.ASP\n    // unescape faz o Percent Encoding virar caracteres\n    // https://www.geeksforgeeks.org/javascript-unescape/#:~:text=The%20unescape()%20function%20in,when%20decoded%20via%20unescape().\n    const stringUTF = unescape(encodeURIComponent(string));\n    return stringUTF.replace(/&quot;|&#039;/gi, '\\'');\n  }\n\n  nextQuestion() {\n    const { next } = this.state;\n    return (\n      <div className=\"w-full flex justify-center\">\n        <button\n          type=\"button\"\n          onClick={this.nextQuestionState}\n          data-testid=\"btn-next\"\n          className=\"group relative w-11/12 flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-60 my-4\"\n          disabled={!next}\n        >\n          <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n            <ArrowRightIcon className=\"h-5 w-5 text-white group-hover:text-indigo-200\" aria-hidden=\"true\" />\n          </span>\n          Próxima Pergunta\n        </button>\n      </div>\n    );\n  }\n\n  nextQuestionState() {\n    const { history } = this.props;\n    this.setState((state) => {\n      if (state.questions.length <= state.curQuestion + 1) {\n        const { hash, name, score } = generateInfos();\n        const picture = `https://www.gravatar.com/avatar/${hash}`;\n        addRanking(name, score, picture);\n        history.push('/feedback');\n\n        return;\n      }\n      return {\n        curQuestion: state.curQuestion + 1,\n        next: false,\n        showAnswers: false,\n        difficulty: state.questions[state.curQuestion + 1].difficulty,\n        startCountdown: true,\n      };\n    });\n  }\n\n  shuffleQuestions(array) {\n    const { showAnswers } = this.state;\n    if (showAnswers) return array;\n    for (let i = array.length - 1; i > 0; i -= 1) {\n      const random = Math.round(Math.random() * (i));\n      const arrayIndex = array[i];\n      const arrayRandom = array[random];\n      array[random] = arrayIndex;\n      array[i] = arrayRandom;\n    }\n    return array;\n  }\n\n  updateTimer(props) {\n    const { startCountdown } = this.state;\n    const { seconds, completed, api: { start } } = props;\n    if (startCountdown) {\n      timer = seconds;\n      if (completed) {\n        this.setState({ startCountdown: false });\n      }\n    }\n    if (completed) start();\n    if (timer === 0) return (<p className=\"text-center font-bold text-xl text-red-600\">Tempo acabou</p>)\n    return (<p className={classNames(timer > 10 ? 'text-blue-800' : 'text-red-600', 'text-center font-bold text-2xl')}>{timer} s</p>);\n  }\n\n  timer() {\n    return (\n      <Countdown\n        intervalDelay={ ONE_SECOND }\n        date={ Date.now() + TIMER }\n        onComplete={ () => this.setState({ showAnswers: true, next: true }) }\n        renderer={ this.updateTimer }\n      />\n    );\n  }\n\n  renderButtons(answer, id, correct) {\n    const { showAnswers } = this.state;\n    if (answer === correct) {\n      return (\n        <button\n          key={ id }\n          data-testid=\"correct-answer\"\n          type=\"button\"\n          name=\"correct\"\n          onClick={ this.handleClick }\n          className={classNames(showAnswers ? 'bg-green-500 hover:bg-green-600 focus:ring-green-400' : 'bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500', 'group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white focus:outline-none focus:ring-2 focus:ring-offset-2')}\n          disabled={ showAnswers }\n        >\n          {this.formatText(answer)}\n        </button>\n      );\n    }\n    return (\n      <button\n        key={ id }\n        data-testid={ `wrong-answer-${id}` }\n        type=\"button\"\n        name=\"wrong\"\n        onClick={ this.handleClick }\n        className={classNames(showAnswers ? 'bg-red-500 hover:bg-red-600 focus:ring-red-400' : 'bg-indigo-600 hover:bg-indigo-700 focus:ring-indigo-500', 'group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white focus:outline-none focus:ring-2 focus:ring-offset-2')}\n        disabled={ showAnswers }\n      >\n        {this.formatText(answer)}\n      </button>);\n  }\n\n  render() {\n    const { questions, curQuestion } = this.state;\n    const result = questions[curQuestion];\n    return (\n      <div className=\"min-h-full py-12 px-4 sm:px-6 lg:px-8 flex justify-center\">\n        {questions.length === 0 || curQuestion - 1 >= questions.length\n          ? <div className=\"lg:min-w-mincontainer md:min-w-mincontainersm flex flex-col md:flex-row items-center md:justify-center shadow-md rounded-xl border-solid border-gray-200 border-2 font-serif font-bold text-xl py-6\">Nao foi possivel encontrar questoes, arrume as<Link to=\"/settings\" className=\"ml-2 text-blue-700 underline\">Configurações</Link></div>\n          : (\n            <div className=\"lg:min-w-mincontainer md:min-w-mincontainersm flex flex-col md:flex-row items-center md:justify-center shadow-md rounded-xl border-solid border-gray-200 border-2\">\n              <div className=\"min-w-md w-full md:h-container border-solid border-b-2 border-gray-200 md:border-r-2 md:border-b-0\">\n                <p data-testid=\"question-category\" className=\"font-serif font-semibold text-xl text-purple-700 rounded-t-xl md:rounded-t-none md:rounded-tl-xl overflow-hidden bg-gradient-to-r from-indigo-50 to-indigo-100 text-center p-4\">{result.category}</p>\n                <p data-testid=\"question-text\" className=\"mx-3 mt-2 md:h-16 font-mono antialiased leading-tight font-semibold overflow-auto\">{this.formatText(result.question)}</p>\n                {this.timer()}\n                {this.nextQuestion()}\n              </div>\n              <div className=\"max-w-md w-full md:h-container flex flex-col items-center md:justify-center space-y-5 p-3\">\n                {\n                  result.alternatives.map((answer, id) => (\n                    this.renderButtons(answer, id, result.correct_answer)\n                  ))\n                }\n              </div>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateScore: (score) => dispatch(setScoreAction(score)),\n});\n\nconst mapStateToProps = ({ user, settings: { amount, difficulty, category, type } }) => ({\n  score: user.score,\n  assertions: user.assertions,\n  amount,\n  difficulty,\n  category,\n  type,\n});\n\nGame.propTypes = {\n  updateScore: PropTypes.func.isRequired,\n  score: PropTypes.number.isRequired,\n  assertions: PropTypes.number.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n  amount: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  difficulty: PropTypes.string.isRequired,\n  category: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { addTokenInStorage, saveScoreInStorage } from '../utils/localStorage';\nimport { sendLoginInfo as sendLoginInfoAction } from '../actions';\nimport { fetchToken } from '../services';\nimport { LockClosedIcon } from '@heroicons/react/solid';\nimport { CogIcon } from '@heroicons/react/outline'\nimport logo from '../trivia.png';\n\nclass Login extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      name: '',\n      email: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  enableButton() {\n    const { name, email } = this.state;\n    return (name.length === 0 || email.length === 0);\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    const { sendLoginInfo, history } = this.props;\n    sendLoginInfo(this.state);\n    const token = await fetchToken();\n    addTokenInStorage(token);\n    saveScoreInStorage();\n    history.push('/game');\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"min-h-full flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n          <div className=\"max-w-md w-full space-y-8 sm:border-solid sm:border-gray-200 sm:p-3 sm:border-2 sm:rounded-xl sm:shadow-md\">\n            <div className=\"relative mt-3\">\n              <img\n                className=\"mx-auto h-12 w-auto\"\n                src={logo}\n                alt=\"Logo\"\n              />\n              <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">Entre para jogar</h2>\n              <Link to=\"/settings\" className=\"absolute top-1 right-2\">\n                <button\n                  type=\"button\"\n                  data-testid=\"btn-settings\"\n                  onClick={this.redirectToConfig}\n                >\n                  <CogIcon className=\"h-8 w-8 text-indigo-500 group-hover:text-indigo-200\" aria-hidden=\"true\" />\n                </button>\n              </Link>\n            </div>\n            <form className=\"mt-8 space-y-6\" onSubmit={this.handleSubmit}>\n              <input type=\"hidden\" name=\"remember\" defaultValue=\"true\" />\n              <div className=\"rounded-md shadow-sm -space-y-px\">\n                <div>\n                  <label htmlFor=\"input-player-name\" className=\"sr-only\">\n                    Nome\n                  </label>\n                  <input\n                    id=\"input-player-name\"\n                    data-testid=\"input-player-name\"\n                    name=\"name\"\n                    onChange={this.handleChange}\n                    type=\"text\"\n                    autoComplete=\"name\"\n                    required\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"Nome\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"email-address\" className=\"sr-only\">\n                    Email\n                  </label>\n                  <input\n                    id=\"email-address\"\n                    name=\"email\"\n                    type=\"email\"\n                    data-testid=\"input-gravatar-email\"\n                    onChange={ this.handleChange }\n                    autoComplete=\"email\"\n                    required\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"Email\"\n                  />\n                </div>\n              </div>\n              <div>\n                <button\n                  type=\"submit\"\n                  className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-60 mb-1\"\n                  data-testid=\"btn-play\"\n                  disabled={ this.enableButton() }\n                >\n                  <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                    <LockClosedIcon className=\"h-5 w-5 text-indigo-500 group-hover:text-indigo-200\" aria-hidden=\"true\" />\n                  </span>\n                  Jogar\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  sendLoginInfo: (value) => dispatch(sendLoginInfoAction(value)),\n});\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nLogin.propTypes = {\n  sendLoginInfo: PropTypes.func.isRequired,\n  history: PropTypes.objectOf(PropTypes.any).isRequired,\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { PlayIcon } from '@heroicons/react/solid';\n\nclass About extends React.Component {\n  render() {\n    return (\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"flex flex-col bg-white mt-10 shadow overflow-hidden sm:rounded-lg\">\n          <div className=\"px-6 py-5 sm:px-12\">\n            <h2 className=\"text-lg leading-6 font-medium text-gray-900\">Integrantes do Grupo</h2>\n          </div>\n          <div className=\"bg-white shadow overflow-hidden\">\n            <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6 bg-gradient-to-r from-indigo-50 to-indigo-100\">\n              <h4 className=\"text-md leading-6 font-medium text-gray-900\">Paulo Eduardo De Sordi Gomes</h4>\n            </div>\n            <div>\n              <dl>\n                <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                  <dt className=\"text-sm font-medium text-gray-500\">Github</dt>\n                  <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                    <a href=\"https://github.com/pauloeduardods\">\n                      github.com/pauloeduardods\n                    </a>\n                  </dd>\n                </div>\n                <div className=\"bg-gray-100 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                  <dt className=\"text-sm font-medium text-gray-500\">LinkedIn</dt>\n                  <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                    <a href=\"https://www.linkedin.com/in/pauloeduardods\">\n                      linkedin.com/in/pauloeduardods\n                    </a>\n                  </dd>\n                </div>\n              </dl>\n            </div>\n          </div>\n          <div className=\"bg-white shadow overflow-hidden\">\n            <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6 bg-gradient-to-r from-indigo-50 to-indigo-100\">\n              <h4 className=\"text-md leading-6 font-medium text-gray-900\">Victor De Paula</h4>\n            </div>\n            <div>\n              <dl>\n                <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                  <dt className=\"text-sm font-medium text-gray-500\">Github</dt>\n                  <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                    <a href=\"https://github.com/VSSSP\">\n                      github.com/VSSSP\n                    </a>\n                  </dd>\n                </div>\n                <div className=\"bg-gray-100 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                  <dt className=\"text-sm font-medium text-gray-500\">LinkedIn</dt>\n                  <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                    <a href=\"https://www.linkedin.com/in/victorssspaula\">\n                      linkedin.com/in/victorssspaula\n                    </a>\n                  </dd>\n                </div>\n              </dl>\n            </div>\n          </div>\n          <div className=\"bg-white shadow overflow-hidden\">\n            <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6 bg-gradient-to-r from-indigo-50 to-indigo-100\">\n              <h4 className=\"text-md leading-6 font-medium text-gray-900\">Pedro Barreto</h4>\n            </div>\n            <div>\n              <dl>\n                <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                  <dt className=\"text-sm font-medium text-gray-500\">Github</dt>\n                  <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                    <a href=\"https://github.com/pedrobarreto\">\n                      github.com/pedrobarreto\n                    </a>\n                  </dd>\n                </div>\n                <div className=\"bg-gray-100 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                  <dt className=\"text-sm font-medium text-gray-500\">LinkedIn</dt>\n                  <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                    <a href=\"https://www.linkedin.com/in/barreto-pedro\">\n                      linkedin.com/in/barreto-pedro\n                    </a>\n                  </dd>\n                </div>\n              </dl>\n            </div>\n          </div>\n          <div className=\"bg-white shadow overflow-hidden\">\n            <div className=\"border-t border-gray-200 px-4 py-6 sm:px-6 bg-gradient-to-r from-indigo-50 to-indigo-100\">\n              <h4 className=\"text-md leading-6 font-medium text-gray-900\">Lucas Mateus Duarte Oliveira</h4>\n            </div>\n            <div>\n              <dl>\n                <div className=\"bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                  <dt className=\"text-sm font-medium text-gray-500\">Github</dt>\n                  <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                    <a href=\"https://github.com/lucsduartee\">\n                      github.com/lucsduartee\n                    </a>\n                  </dd>\n                </div>\n                <div className=\"bg-gray-100 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6\">\n                  <dt className=\"text-sm font-medium text-gray-500\">LinkedIn</dt>\n                  <dd className=\"mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2\">\n                    <a href=\"https://www.linkedin.com/in/dev-lucasduarte\">\n                      linkedin.com/in/dev-lucasduarte\n                    </a>\n                  </dd>\n                </div>\n              </dl>\n            </div>\n          </div>\n        </div>\n        <Link to=\"/\" className=\"w-full flex justify-center mt-6\">\n          <button data-testid=\"btn-play-again\" type=\"button\" className=\"group relative w-3/4 flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-60 mb-10\">\n            <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n              <PlayIcon className=\"h-5 w-5 text-white group-hover:text-indigo-200\" aria-hidden=\"true\" />\n            </span>\n            Jogar\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default About;","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { generateInfos } from '../utils/localStorage';\nimport { Popover, Transition } from '@headlessui/react'\nimport { UsersIcon, MenuIcon, PresentationChartLineIcon, XIcon, CheckCircleIcon, UserGroupIcon } from '@heroicons/react/outline';\nimport { ChevronDownIcon } from '@heroicons/react/solid';\nimport logo from '../trivia.png';\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nclass Header extends React.Component {\n  render() {\n    const { hash } = generateInfos();\n    const { name, score , assertions } = this.props;\n    return (\n      <Popover className=\"relative bg-white\">\n        <header className=\"max-w-7xl mx-auto px-4 sm:px-6\">\n          <div className=\"flex justify-between items-center border-b-2 border-gray-100 py-2\">\n            <div className=\"flex justify-start lg:w-0 lg:flex-1\">\n              <span className=\"sr-only\">Player image</span>\n              <Link to=\"/\">\n                <img\n                  data-testid=\"header-profile-picture\"\n                  src={`https://www.gravatar.com/avatar/${hash}`}\n                  alt=\"Profile\"\n                  className=\"h-8 w-auto sm:h-10 rounded-full\"\n                />\n              </Link>\n            </div>\n            <div className=\"-mr-2 -my-2 md:hidden\">\n              <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                <span className=\"sr-only\">Abrir menu</span>\n                <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n              </Popover.Button>\n            </div>\n            <div className=\"hidden md:flex md:ml-logosm lg:ml-logo lg:flex-1\">\n              <Link to=\"/\">\n                <img src={logo} alt=\"Trivia IMG\" className=\"h-8 w-auto justify-center\" />\n              </Link>\n            </div>\n            <Popover.Group as=\"nav\" className=\"hidden md:flex space-x-5 md:space-x-10 mr-7 md:mr-0 justify-end\">\n              <Popover className=\"relative\">\n                {({ open }) => (\n                  <>\n                    <Popover.Button\n                      className={classNames(\n                        open ? 'text-gray-900' : 'text-gray-500',\n                        'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                      )}\n                    >\n                      <span>Nome</span>\n                      <ChevronDownIcon\n                        className={classNames(\n                          open ? 'text-gray-600' : 'text-gray-400',\n                          'ml-2 h-5 w-5 group-hover:text-gray-500'\n                        )}\n                        aria-hidden=\"true\"\n                      />\n                    </Popover.Button>\n\n                    <Transition\n                      as={Fragment}\n                      enter=\"transition ease-out duration-200\"\n                      enterFrom=\"opacity-0 translate-y-1\"\n                      enterTo=\"opacity-100 translate-y-0\"\n                      leave=\"transition ease-in duration-150\"\n                      leaveFrom=\"opacity-100 translate-y-0\"\n                      leaveTo=\"opacity-0 translate-y-1\"\n                    >\n                      <Popover.Panel className=\"absolute z-10 -ml-64 mt-3 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/2 lg:-translate-x-1/2\">\n                        <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                          <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                            <div className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\">\n                              <UsersIcon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              <div className=\"ml-4\">\n                                <p className=\"max-w-xs truncate text-base font-medium text-gray-900\">{name}</p>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </Popover.Panel>\n                    </Transition>\n                  </>\n                )}\n              </Popover>\n              <Popover className=\"relative\">\n                {({ open }) => (\n                  <>\n                    <Popover.Button\n                      className={classNames(\n                        open ? 'text-gray-900' : 'text-gray-500',\n                        'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                      )}\n                    >\n                      <span>Score</span>\n                      <ChevronDownIcon\n                        className={classNames(\n                          open ? 'text-gray-600' : 'text-gray-400',\n                          'ml-2 h-5 w-5 group-hover:text-gray-500'\n                        )}\n                        aria-hidden=\"true\"\n                      />\n                    </Popover.Button>\n\n                    <Transition\n                      as={Fragment}\n                      enter=\"transition ease-out duration-200\"\n                      enterFrom=\"opacity-0 translate-y-1\"\n                      enterTo=\"opacity-100 translate-y-0\"\n                      leave=\"transition ease-in duration-150\"\n                      leaveFrom=\"opacity-100 translate-y-0\"\n                      leaveTo=\"opacity-0 translate-y-1\"\n                    >\n                      <Popover.Panel className=\"absolute z-10 -ml-80 mt-3 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/3 lg:-translate-x-1/2\">\n                        <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                          <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                            <div className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\">\n                              <PresentationChartLineIcon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              <div className=\"ml-4\">\n                                <p className=\"text-base font-medium text-gray-900\">{score}</p>\n                              </div>\n                            </div>\n                            <div className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\">\n                              <CheckCircleIcon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              <div className=\"ml-4\">\n                                <p className=\"text-base font-medium text-gray-900\">{assertions}</p>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </Popover.Panel>\n                    </Transition>\n                  </>\n                )}\n              </Popover>\n              <Popover className=\"relative\">\n                {({ open }) => (\n                  <>\n                    <Popover.Button\n                      className={classNames(\n                        open ? 'text-gray-900' : 'text-gray-500',\n                        'group bg-white rounded-md inline-flex items-center text-base font-medium hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500'\n                      )}\n                    >\n                      <span>Links</span>\n                      <ChevronDownIcon\n                        className={classNames(\n                          open ? 'text-gray-600' : 'text-gray-400',\n                          'ml-2 h-5 w-5 group-hover:text-gray-500'\n                        )}\n                        aria-hidden=\"true\"\n                      />\n                    </Popover.Button>\n\n                    <Transition\n                      as={Fragment}\n                      enter=\"transition ease-out duration-200\"\n                      enterFrom=\"opacity-0 translate-y-1\"\n                      enterTo=\"opacity-100 translate-y-0\"\n                      leave=\"transition ease-in duration-150\"\n                      leaveFrom=\"opacity-100 translate-y-0\"\n                      leaveTo=\"opacity-0 translate-y-1\"\n                    >\n                      <Popover.Panel className=\"absolute z-10 -ml-logosm mt-3 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/3 lg:-translate-x-1/2\">\n                        <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                          <div className=\"relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8\">\n                            <div className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\">\n                              <PresentationChartLineIcon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              <div className=\"ml-4\">\n                                <Link to=\"/ranking\" className=\"text-base font-medium text-gray-900\">Ranking</Link>\n                              </div>\n                            </div>\n                            <div className=\"-m-3 p-3 flex items-start rounded-lg hover:bg-gray-50\">\n                              <UserGroupIcon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                              <div className=\"ml-4\">\n                                <Link to=\"/about\" className=\"text-base font-medium text-gray-900\">Sobre</Link>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </Popover.Panel>\n                    </Transition>\n                  </>\n                )}\n              </Popover>\n            </Popover.Group>\n          </div>\n        </header>\n        <Transition\n          as={Fragment}\n          enter=\"duration-200 ease-out\"\n          enterFrom=\"opacity-0 scale-95\"\n          enterTo=\"opacity-100 scale-100\"\n          leave=\"duration-100 ease-in\"\n          leaveFrom=\"opacity-100 scale-100\"\n          leaveTo=\"opacity-0 scale-95\"\n        >\n          <Popover.Panel focus className=\"z-10 absolute top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\">\n            <div className=\"rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white divide-y-2 divide-gray-50\">\n              <div className=\"pt-5 pb-6 px-5\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <Link to=\"/\">\n                      <img\n                        data-testid=\"header-profile-picture\"\n                        src={`https://www.gravatar.com/avatar/${hash}`}\n                        alt=\"Profile\"\n                        className=\"h-8 w-auto rounded-full\"\n                      />\n                    </Link>\n                  </div>\n                  <div>\n                    <Link to=\"/\">\n                      <img\n                        data-testid=\"header-profile-picture\"\n                        src={logo}\n                        alt=\"logo\"\n                        className=\"h-8 w-auto\"\n                      />\n                    </Link>\n                  </div>\n                  <div className=\"-mr-2\">\n                    <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                      <span className=\"sr-only\">Fechar menu</span>\n                      <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                    </Popover.Button>\n                  </div>\n                </div>\n                <div className=\"mt-10\">\n                  <nav className=\"grid gap-y-8\">\n                    <div className=\"-m-3 p-3 flex items-center rounded-md hover:bg-gray-50\">\n                      <UsersIcon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                      <span className=\"max-w-headersmall sm:max-w-sm md:max-w-md truncate ml-3 text-base font-medium text-gray-900\">{name}</span>\n                    </div>\n                    <div className=\"-m-3 p-3 flex items-center rounded-md hover:bg-gray-50\">\n                      <PresentationChartLineIcon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                      <span className=\"ml-3 text-base font-medium text-gray-900\">{score}</span>\n                    </div>\n                    <div className=\"-m-3 p-3 flex items-center rounded-md hover:bg-gray-50\">\n                      <CheckCircleIcon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                      <span className=\"ml-3 text-base font-medium text-gray-900\">{assertions}</span>\n                    </div>\n                    <div className=\"-m-3 p-3 flex items-center justify-around hover:bg-gray-50 border-t-2\">\n                      <div>\n                        <PresentationChartLineIcon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                        <Link to=\"/ranking\" className=\"ml-3 text-base font-medium text-gray-900\">\n                          Ranking\n                        </Link>\n                      </div>\n                      <div>\n                        <UserGroupIcon className=\"flex-shrink-0 h-6 w-6 text-indigo-600\" aria-hidden=\"true\" />\n                        <Link to=\"/about\" className=\"ml-3 text-base font-medium text-gray-900\">\n                          Sobre\n                        </Link>\n                      </div>\n                    </div>\n                  </nav>\n                </div>\n              </div>\n            </div>\n          </Popover.Panel>\n        </Transition>\n      </Popover>\n    );\n  }\n}\n\nconst mapStateToProps = ({ user: { name, score, assertions } }) => ({\n  name, score, assertions\n});\n\nHeader.propTypes = {\n  name: PropTypes.string.isRequired,\n  score: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  assertions: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Config from './pages/Config';\nimport Ranking from './pages/Ranking';\nimport Feedback from './pages/Feedback';\nimport Game from './pages/Game';\nimport Login from './pages/Login';\nimport About from './pages/About';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={ Login } />\n        <Route exact path=\"/game\" component={ Game } />\n        <Route exact path=\"/settings\" component={ Config } />\n        <Route exact path=\"/feedback\" component={ Feedback } />\n        <Route exact path=\"/ranking\" component={ Ranking } />\n        <Route exact path=\"/about\" component={ About } />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}